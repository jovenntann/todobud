version: '3.9'
services:
  postgres:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./backups:/backups
    environment:
      - POSTGRES_DB=django
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
    - "5432:5432"
  redis:
    image: redis
    restart: always
    ports:
      - "6379"
  django:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "/wait &&
             python manage.py collectstatic --no-input &&
             python manage.py makemigrations --noinput &&
             python manage.py migrate --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
    - .:/app
    ports:
    - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    environment:
      WAIT_HOSTS: postgres:5432
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "/wait && python3 manage.py celery"
    volumes:
    - .:/app
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    environment:
      WAIT_HOSTS: postgres:5432, redis:6379
  flower:
    image: mher/flower:0.9.7
    command: ['flower', '--broker=redis://redis:6379', '--port=5555']
    ports:
    - "5555:5555"
    depends_on:
      - redis
  ngrok:
    image: wernight/ngrok
    depends_on:
      - django
    environment:
      WAIT_HOSTS: django:8000
      NGROK_PORT: django:8000
      NGROK_PROTOCOL: http
      NGROK_AUTH: "27jZBOjlmfCnyLXUQjqefdBNYIx_7zGMYH9Gm82T7vMcZu5tW"
    ports:
      - "4040:4040"
